# %pip install scikit-learn
import sklearn
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

try:
    data = pd.read_csv(r'C:\Users\pramay wankhade\OneDrive\Documents\B.Tech\Sem IV\DAV\Exp_6\dataset.csv')
    data.head()
except Exception as e:
    print("Error Opening File: {e}")

x = data[["YearsExperience"]]  # Independent variable
y = data["Salary"]  # Dependent variable

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

print("Intercept:", model.intercept_)
print("Coefficient:", model.coef_)

y_pred = model.predict(X_test)'

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared Score:", r2)

plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted')
plt.xlabel("Feature")
plt.ylabel("Target")
plt.legend()
plt.show()

new_employee = np.array([[10]])  # Experience in years
predicted_salary = model.predict(new_employee)

print(f"Predicted Salary for {new_employee} years of experience: ${predicted_salary[0]:.2f}K")

plt.scatter(x, y, color="blue", label="Actual Data")
plt.plot(x, model.predict(x), color="red", marker=".", linestyle="-", label="Regression Line")
plt.scatter(new_employee, predicted_salary, color="green", marker="*", s=150, label="Prediction")
plt.xlabel("Years of Experience")
plt.ylabel("Salary (in $1000s)")
plt.title("Salary Prediction Using Linear Regression")
plt.legend()
plt.show()





